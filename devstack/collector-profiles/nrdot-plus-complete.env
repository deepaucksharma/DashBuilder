# NRDOT PLUS Complete Profile
# Comprehensive configuration for NRDOT PLUS distribution

# ===== COLLECTOR IDENTIFICATION =====
COLLECTOR_IMAGE=${NRDOT_PLUS_IMAGE:-newrelic/nrdot-collector-plus:latest}
COLLECTOR_TYPE=nrdot-plus
COLLECTOR_VARIANT=plus
CONFIG_PATH=/etc/nrdot-plus/config.yaml

# ===== NRDOT PLUS SPECIFIC FEATURES =====
# Feature flags
NRDOT_PLUS_FEATURES="enhanced-discovery,smart-sampling,multi-tenant,cloud-native"

# Cloud provider auto-detection
NRDOT_PLUS_CLOUD_AUTODECT=true

# Enhanced receivers
NRDOT_PLUS_RECEIVERS="hostmetrics,kubernetes,prometheus,statsd,custom"

# Plugin support
NRDOT_PLUS_PLUGIN_DIR=/opt/nrdot-plus/plugins
NRDOT_PLUS_PLUGIN_CONFIG=/etc/nrdot-plus/plugins.yaml

# ===== ENHANCED CONFIGURATION =====
# Multi-config support
ADDITIONAL_CONFIGS="/etc/nrdot-plus/receivers.yaml,/etc/nrdot-plus/processors.yaml,/etc/nrdot-plus/exporters.yaml"
CONFIG_MERGE_STRATEGY=overlay

# Dynamic configuration
DYNAMIC_CONFIG_ENABLED=true
DYNAMIC_CONFIG_ENDPOINT="http://config-server:8080/nrdot-plus/config"
DYNAMIC_CONFIG_REFRESH_INTERVAL=300s

# ===== ADVANCED RECEIVERS =====
# Host metrics with all scrapers
HOSTMETRICS_COLLECTION_INTERVAL=15s
HOSTMETRICS_SCRAPERS="cpu,memory,disk,filesystem,load,network,processes,process,docker,systemd"
HOSTMETRICS_ROOT_PATH=/hostfs

# Kubernetes receiver
ENABLE_K8S_RECEIVER=true
K8S_NODE_NAME='${NODE_NAME}'
K8S_AUTH_TYPE=serviceAccount
K8S_COLLECTION_INTERVAL=30s

# Prometheus receiver with service discovery
ENABLE_PROMETHEUS_RECEIVER=true
PROMETHEUS_SD_ENABLED=true
PROMETHEUS_SD_CONFIGS="kubernetes,consul,dns"

# Custom protocol receivers
ENABLE_CUSTOM_RECEIVERS=true
CUSTOM_RECEIVER_PORTS="9100:node_exporter,9200:elasticsearch,9300:custom_app"

# ===== ENHANCED PROCESSORS =====
# Smart sampling
SAMPLING_ENABLED=true
SAMPLING_STRATEGY=adaptive
SAMPLING_INITIAL_RATE=1.0
SAMPLING_MIN_RATE=0.1
SAMPLING_MAX_RATE=1.0

# Advanced filtering
FILTER_STRATEGY=smart
FILTER_NOISE_REDUCTION=true
FILTER_DUPLICATE_REMOVAL=true

# Resource enrichment
RESOURCE_ENRICHMENT_SOURCES="k8s-api,cloud-metadata,dns,custom-api"
RESOURCE_CACHE_TTL=300s

# ===== MULTI-DESTINATION EXPORT =====
# Primary endpoint (New Relic)
OTLP_ENDPOINT='${NRDOT_PLUS_PRIMARY_ENDPOINT:-https://otlp.nr-data.net}'
OTLP_HEADERS='api-key=${NEW_RELIC_LICENSE_KEY}'

# Secondary endpoints
SECONDARY_ENDPOINTS='${NRDOT_PLUS_SECONDARY_ENDPOINTS}'
FAILOVER_ENABLED=true
CIRCUIT_BREAKER_ENABLED=true

# Export strategies
EXPORT_STRATEGY=loadbalance  # Options: loadbalance, failover, fanout
EXPORT_RETRY_MULTIPLIER=2
EXPORT_MAX_RETRY_INTERVAL=300s

# ===== SECURITY ENHANCEMENTS =====
# Authentication
AUTH_TYPE='${NRDOT_PLUS_AUTH_TYPE:-mtls}'
MTLS_CERT_PATH=/etc/nrdot-plus/certs/client.crt
MTLS_KEY_PATH=/etc/nrdot-plus/certs/client.key
MTLS_CA_PATH=/etc/nrdot-plus/certs/ca.crt

# Secret management integration
SECRET_PROVIDER='${NRDOT_PLUS_SECRET_PROVIDER:-env}'  # Options: env, vault, aws-sm, gcp-sm
SECRET_REFRESH_INTERVAL=3600s

# ===== PERFORMANCE OPTIMIZATION =====
# Memory management
MEMORY_LIMIT_MIB=1024
MEMORY_SPIKE_LIMIT_MIB=256
MEMORY_BALLAST_SIZE_MIB=512

# Batching and queuing
BATCH_SIZE=2000
BATCH_TIMEOUT=5s
QUEUE_SIZE=10000
QUEUE_RETRY_ON_FAILURE=true
PERSISTENT_QUEUE_ENABLED=true
PERSISTENT_QUEUE_PATH=/var/lib/nrdot-plus/queue

# Compression
COMPRESSION_TYPE=zstd
COMPRESSION_LEVEL=3

# ===== CLOUD NATIVE FEATURES =====
# Service mesh integration
SERVICE_MESH_ENABLED='${NRDOT_PLUS_SERVICE_MESH_ENABLED:-false}'
SERVICE_MESH_TYPE='${NRDOT_PLUS_SERVICE_MESH_TYPE:-istio}'

# Container runtime integration
CONTAINER_RUNTIME_SOCKET=/var/run/docker.sock
CONTAINER_ENRICHMENT_ENABLED=true

# Orchestrator integration
ORCHESTRATOR_TYPE='${NRDOT_PLUS_ORCHESTRATOR:-kubernetes}'
ORCHESTRATOR_NAMESPACE='${NRDOT_PLUS_NAMESPACE:-default}'

# ===== OBSERVABILITY =====
# Self-monitoring
SELF_MONITORING_ENABLED=true
SELF_METRICS_PORT=8888
SELF_LOGS_LEVEL=info

# Debugging
ENABLE_PROFILING=true
PROFILING_PORT=6060
ENABLE_ZPAGES=true
ZPAGES_PORT=55679
ENABLE_DEBUG_METRICS=true

# ===== DEPLOYMENT =====
NUM_COLLECTORS='${NRDOT_PLUS_REPLICAS:-5}'
COLLECTOR_NAME_PREFIX=nrdot-plus

# Resource attributes with cloud-native tags
RESOURCE_ATTRIBUTES_TEMPLATE="host.name={{HOSTNAME}},host.id={{HOSTNAME}},service.name='${NRDOT_PLUS_SERVICE_NAME:-openstack-vm}',environment='${NRDOT_PLUS_ENVIRONMENT:-production}',version='${NRDOT_PLUS_VERSION:-latest}',cluster='${NRDOT_PLUS_CLUSTER:-default}'"

# ===== VOLUME CONFIGURATION =====
# Standard mounts
MOUNT_HOST_FS=true
MOUNT_PROC=true
MOUNT_SYS=true

# NRDOT PLUS specific volumes
PLUGIN_VOLUMES="/opt/plugins:/opt/nrdot-plus/plugins:ro"
CERT_VOLUMES="/etc/ssl/certs:/etc/nrdot-plus/certs:ro"
CONFIG_VOLUMES="/etc/nrdot-plus/conf.d:/etc/nrdot-plus/conf.d:ro"

# Persistent storage
PERSISTENT_VOLUMES="/var/lib/nrdot-plus:/var/lib/nrdot-plus:rw"

# ===== NETWORK CONFIGURATION =====
NETWORK_MODE='${NRDOT_PLUS_NETWORK_MODE:-bridge}'
PID_MODE=host

# Ports
BASE_GRPC_PORT=4317
BASE_HTTP_PORT=4318
BASE_HEALTH_PORT=13133

# Additional ports for enhanced receivers
ADDITIONAL_PORTS="8125:8125/udp,9090:9090,9100:9100"

# ===== SECURITY CONFIGURATION =====
# Enhanced capabilities
CAPABILITIES="SYS_PTRACE,NET_RAW,NET_ADMIN"

# Security options
SECURITY_OPT="no-new-privileges:true,seccomp=unconfined"

# Run as non-root
RUN_AS_USER=10001
RUN_AS_GROUP=10001

# ===== ENVIRONMENT VARIABLES =====
# Core settings
LOG_LEVEL='${NRDOT_PLUS_LOG_LEVEL:-info}'

# Feature toggles
ADDITIONAL_ENV_VARS="NRDOT_PLUS_EXPERIMENTAL_FEATURES='${NRDOT_PLUS_EXPERIMENTAL:-false}',NRDOT_PLUS_BETA_FEATURES='${NRDOT_PLUS_BETA:-true}'"

# Tenant configuration
NRDOT_PLUS_TENANT_ID='${TENANT_ID}'
NRDOT_PLUS_TENANT_ISOLATION=true

# Custom metadata
NRDOT_PLUS_CUSTOM_METADATA='${CUSTOM_METADATA}'

# ===== DOCKER OPTIONS =====
# Resource limits
CPU_LIMIT='${NRDOT_PLUS_CPU_LIMIT:-2}'
CPU_RESERVATION='${NRDOT_PLUS_CPU_RESERVATION:-0.5}'
MEMORY_LIMIT='${NRDOT_PLUS_MEMORY_LIMIT:-2g}'
MEMORY_RESERVATION='${NRDOT_PLUS_MEMORY_RESERVATION:-1g}'

# Advanced options
DOCKER_RUN_OPTS="--ulimit memlock=-1:-1 --ulimit nofile=65536:65536"

# Labels for orchestration
DOCKER_LABELS="app=nrdot-plus,tier=monitoring,managed-by=devstack"

# ===== HOOKS AND EXTENSIONS =====
# Lifecycle scripts
PRE_START_SCRIPT=/opt/nrdot-plus/scripts/pre-start.sh
POST_START_SCRIPT=/opt/nrdot-plus/scripts/post-start.sh
HEALTH_CHECK_SCRIPT=/opt/nrdot-plus/scripts/health-check.sh

# Custom extensions
CUSTOM_EXTENSIONS_ENABLED=true
CUSTOM_EXTENSIONS_PATH=/opt/nrdot-plus/extensions

# ===== EXPERIMENTAL FEATURES =====
ENABLE_EXPERIMENTAL=true
EXPERIMENTAL_FLAGS="new-metric-format,enhanced-sampling,ml-anomaly-detection"

# ===== BACKWARD COMPATIBILITY =====
# Support for standard NRDOT env vars
OTEL_EXPORTER_OTLP_ENDPOINT='${OTLP_ENDPOINT}'
OTEL_EXPORTER_OTLP_HEADERS='${OTLP_HEADERS}'
OTEL_RESOURCE_ATTRIBUTES='${RESOURCE_ATTRIBUTES_TEMPLATE}'

# ===== NOTES =====
# This configuration assumes NRDOT PLUS includes:
# - Enhanced receivers for cloud-native environments
# - Advanced processors with ML capabilities
# - Multi-destination export with failover
# - Plugin system for custom extensions
# - Enhanced security features
# - Performance optimizations
# - Cloud provider integrations