# Balanced OpenTelemetry Collector Configuration
# Balanced optimizations - good coverage with significant cost reduction

receivers:
  # OTLP receiver for incoming telemetry
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
  
  # Host metrics with standard collection frequency
  hostmetrics:
    collection_interval: 60s
    scrapers:
      cpu:
        metrics:
          system.cpu.utilization:
            enabled: true
          system.cpu.time:
            enabled: false
      disk:
      filesystem:
        metrics:
          system.filesystem.utilization:
            enabled: true
      memory:
      network:
        metrics:
          system.network.io:
            enabled: true
          system.network.errors:
            enabled: true
          system.network.packets:
            enabled: false
      paging:
      processes:
        metrics:
          system.processes.count:
            enabled: true
          system.processes.created:
            enabled: false
      load:

processors:
  # Batch processor for efficiency
  batch:
    timeout: 10s
    send_batch_size: 1000
  
  # Memory limiter to prevent OOM
  memory_limiter:
    check_interval: 1s
    limit_mib: 512
    spike_limit_mib: 128
  
  # Resource processor to add metadata
  resource:
    attributes:
      - key: service.name
        value: nrdot-collector
        action: insert
      - key: service.version
        value: "2.0"
        action: insert
      - key: nrdot.profile
        value: balanced
        action: insert
  
  # Filter processor with balanced filtering
  filter:
    metrics:
      include:
        match_type: regexp
        metric_names:
          - .*cpu.*utilization
          - .*memory.*usage
          - .*disk.*utilization
          - .*network.*io
          - .*network.*errors
          - system\.processes\.count
          - nrdot\..*
  
  
  # Metric transform to reduce cardinality
  metricstransform:
    transforms:
      - include: system.cpu.utilization
        match_type: regexp
        action: update
        operations:
          - action: aggregate_labels
            label_set: [cpu]
            aggregation_type: mean
      - include: system.filesystem.utilization
        match_type: regexp
        action: update
        operations:
          - action: aggregate_labels
            label_set: [device]
            aggregation_type: mean

exporters:
  # New Relic OTLP exporter
  otlphttp:
    endpoint: https://otlp.nr-data.net
    headers:
      api-key: ${NEW_RELIC_LICENSE_KEY}
    compression: gzip
    sending_queue:
      enabled: true
      num_consumers: 4
      queue_size: 1000
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 5m
  
  # Debug exporter to see what's being sent
  debug:
    verbosity: detailed
    
  # Prometheus metrics for self-monitoring
  prometheus:
    endpoint: 0.0.0.0:8889

service:
  pipelines:
    metrics:
      receivers: [otlp, hostmetrics]
      processors: [memory_limiter, batch, resource, filter, metricstransform]
      exporters: [otlphttp, prometheus, debug]
  
  extensions: [health_check, pprof, zpages]
  
  telemetry:
    logs:
      level: debug
    metrics:
      level: detailed

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
  pprof:
    endpoint: 0.0.0.0:1777
  zpages:
    endpoint: 0.0.0.0:55679
