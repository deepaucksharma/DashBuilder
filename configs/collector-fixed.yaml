# Fixed OpenTelemetry Collector Configuration

receivers:
  # Host metrics
  hostmetrics:
    collection_interval: 15s
    scrapers:
      cpu:
      memory:
      process:
      disk:
      filesystem:
      network:

  # OTLP receiver
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

processors:
  batch:
    timeout: 10s
    send_batch_size: 1000

  memory_limiter:
    check_interval: 1s
    limit_mib: 512

  attributes:
    actions:
      - key: service.name
        value: nrdot
        action: upsert
      - key: service.version
        value: "2.0"
        action: upsert

  metricstransform:
    transforms:
      - include: system.cpu.utilization
        match_type: strict
        action: insert
        new_name: nrdot.cpu.utilization
      - include: system.memory.utilization
        match_type: strict
        action: insert
        new_name: nrdot.memory.utilization
      - include: process.cpu.utilization
        match_type: strict
        action: insert
        new_name: nrdot.process.cpu.utilization
      - include: process.memory.usage
        match_type: strict
        action: insert
        new_name: nrdot.process.memory.usage

exporters:
  # New Relic OTLP exporter
  otlp:
    endpoint: "otlp.nr-data.net:4317"
    headers:
      "api-key": ${NEW_RELIC_LICENSE_KEY}
    compression: gzip
    tls:
      insecure: false

  # Debug exporter
  debug:
    verbosity: normal

  # Prometheus exporter
  prometheus:
    endpoint: "0.0.0.0:8888"

extensions:
  health_check:
    endpoint: 0.0.0.0:13133

service:
  telemetry:
    logs:
      level: info
      
  extensions: [health_check]
  
  pipelines:
    metrics:
      receivers: [hostmetrics, otlp]
      processors: [memory_limiter, batch, attributes, metricstransform]
      exporters: [otlp, debug, prometheus]