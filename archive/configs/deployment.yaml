# deployment.yaml
# NRDOT v2 Ultimate deployment configuration

version: 3.0.0

# Deployment environment
environment: production  # production, staging, development

# Initial optimization profile
initial_profile: conservative

# Deployment modes
deployment:
  mode: rolling  # rolling, blue_green, canary
  batch_size: 3  # nodes per batch for rolling deployment
  wait_time: 300  # seconds between batches
  health_check_timeout: 180
  rollback_on_failure: true
  
# Experiment configuration
experiments:
  enabled: true
  default_duration: 86400  # 24 hours
  max_concurrent: 3
  auto_rollback_threshold: 0.95  # SLA threshold
  
# Feature flags
features:
  ml_predictions: true
  advanced_cardinality_control: true
  cost_allocation: true
  real_time_dashboard: true
  webhook_notifications: true
  automatic_profile_switching: true
  
# Backup and recovery
backup:
  enabled: true
  retention_days: 30
  schedule: "0 2 * * *"  # Daily at 2 AM
  storage_path: "/var/backups/nrdot"
  
# High availability
ha:
  enabled: true
  min_instances: 2
  max_instances: 10
  load_balancer: nginx
  health_check_interval: 30
  failover_timeout: 60
  
# Security settings
security:
  tls_enabled: true
  cert_path: "/etc/ssl/certs/nrdot.crt"
  key_path: "/etc/ssl/private/nrdot.key"
  api_rate_limit: 1000  # requests per minute
  auth_required: true
  
# Monitoring and alerting
monitoring:
  enabled: true
  metrics_retention: 2592000  # 30 days
  alert_channels:
    - slack
    - email
    - pagerduty
  alert_thresholds:
    error_rate: 0.05
    latency_p99: 5000  # milliseconds
    cost_variance: 0.20
    
# Resource limits
resources:
  collector:
    cpu_limit: "2000m"
    memory_limit: "4Gi"
    cpu_request: "500m" 
    memory_request: "1Gi"
  ml_engine:
    cpu_limit: "1000m"
    memory_limit: "2Gi"
    cpu_request: "250m"
    memory_request: "512Mi"
  dashboard:
    cpu_limit: "500m"
    memory_limit: "1Gi"
    cpu_request: "100m"
    memory_request: "256Mi"

# Network configuration
network:
  collector_port: 4317
  dashboard_port: 8080
  ml_api_port: 8081
  admin_port: 8082
  
# Storage configuration
storage:
  data_path: "/var/lib/nrdot"
  logs_path: "/var/log/nrdot"
  cache_path: "/var/cache/nrdot"
  temp_path: "/tmp/nrdot"
  
# Performance tuning
performance:
  batch_size: 1000
  flush_interval: 10s
  worker_threads: 4
  queue_size: 10000
  compression_enabled: true
  
# Cost optimization targets
cost_targets:
  reduction_goal: 0.85  # 85% cost reduction
  sla_threshold: 0.99   # 99% SLA maintenance
  max_data_loss: 0.001  # 0.1% acceptable data loss
  
# Compliance and governance
compliance:
  data_retention_policy: "90d"
  encryption_at_rest: true
  audit_logging: true
  gdpr_compliance: true
  
# Notification settings
notifications:
  webhook_url: "${WEBHOOK_URL}"
  slack_channel: "#nrdot-alerts"
  email_recipients:
    - "ops-team@company.com"
    - "sre-team@company.com"
    
# Development and testing
development:
  debug_mode: false
  log_level: "INFO"
  profiling_enabled: false
  mock_data_source: false
  
# Integration settings
integrations:
  new_relic:
    api_key: "${NEW_RELIC_API_KEY}"
    account_id: "${NEW_RELIC_ACCOUNT_ID}"
    region: "US"
  prometheus:
    enabled: true
    port: 9090
  grafana:
    enabled: true
    port: 3000
    
# Deployment validation
validation:
  pre_deployment_checks:
    - config_syntax
    - connectivity_test
    - resource_availability
    - backup_verification
  post_deployment_checks:
    - service_health
    - metric_flow
    - cost_tracking
    - alert_functionality
    
# Emergency procedures
emergency:
  circuit_breaker_enabled: true
  emergency_profile: "conservative"
  auto_rollback_triggers:
    - error_rate_spike
    - cost_explosion
    - data_loss_detected
  emergency_contacts:
    - "on-call@company.com"
    - "+1-555-ONCALL"