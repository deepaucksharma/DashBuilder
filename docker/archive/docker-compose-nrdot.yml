version: '3.8'

services:
  nrdot-complete:
    build:
      context: .
      dockerfile: Dockerfile.nrdot-complete
    container_name: nrdot-complete
    restart: unless-stopped
    environment:
      # New Relic API Configuration (REQUIRED)
      - NEW_RELIC_API_KEY=${NEW_RELIC_API_KEY}
      - NEW_RELIC_ACCOUNT_ID=${NEW_RELIC_ACCOUNT_ID}
      - NEW_RELIC_REGION=${NEW_RELIC_REGION:-US}
      - NEW_RELIC_INGEST_KEY=${NEW_RELIC_INGEST_KEY}
      
      # NRDOT v2 Configuration
      - NRDOT_PROFILE=${NRDOT_PROFILE:-balanced}
      - NRDOT_TARGET_COVERAGE=${NRDOT_TARGET_COVERAGE:-95}
      - NRDOT_COST_REDUCTION_TARGET=${NRDOT_COST_REDUCTION_TARGET:-70}
      
      # OpenTelemetry Configuration
      - OTEL_EXPORTER_OTLP_ENDPOINT=https://otlp.nr-data.net:4317
      - OTEL_EXPORTER_OTLP_HEADERS=api-key=${NEW_RELIC_INGEST_KEY}
      
      # Control Loop Configuration
      - CONTROL_LOOP_INTERVAL=${CONTROL_LOOP_INTERVAL:-300}
      - CONTROL_LOOP_COOLDOWN=${CONTROL_LOOP_COOLDOWN:-300}
      - ANOMALY_THRESHOLD=${ANOMALY_THRESHOLD:-2.5}
      
      # Optional Configuration
      - NR_GUARDIAN_CACHE_TTL=${NR_GUARDIAN_CACHE_TTL:-3600}
      - NR_GUARDIAN_RATE_LIMIT_MAX=${NR_GUARDIAN_RATE_LIMIT_MAX:-25}
      - NR_GUARDIAN_LOG_LEVEL=${NR_GUARDIAN_LOG_LEVEL:-info}
      - NODE_ENV=production
    
    ports:
      # Web Dashboard UI
      - "8080:80"
      # API Server
      - "3000:3000"
      # OpenTelemetry Collector Metrics
      - "8888:8888"
      # OpenTelemetry Collector Health
      - "13133:13133"
      
    volumes:
      # Configuration overrides
      - ./configs/collector-config-production.yaml:/etc/nrdot-plus/config.yaml:ro
      - ./examples:/app/examples:ro
      
      # Persistent data
      - nrdot-data:/var/lib/nrdot-plus
      - nrdot-logs:/var/log/nrdot-plus
      
      # Output directory
      - ./docker-output:/app/output
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    labels:
      - "com.newrelic.nrdot.version=2.0"
      - "com.newrelic.nrdot.profile=${NRDOT_PROFILE:-balanced}"
      
  # Optional: Prometheus for local metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: nrdot-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    depends_on:
      - nrdot-complete
    profiles:
      - monitoring

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: nrdot-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./configs/grafana-provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
    profiles:
      - monitoring

volumes:
  nrdot-data:
    driver: local
  nrdot-logs:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  default:
    name: nrdot-network
    driver: bridge