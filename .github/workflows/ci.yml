name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install dependencies
      run: |
        npm ci
        cd scripts && npm ci
        cd ../automation && npm ci
        cd ../nrdot-nr1-app && npm ci
    
    - name: Run tests
      run: |
        npm test
        cd scripts && npm test
    
    - name: Test Docker builds
      run: |
        docker-compose config
        docker-compose -f docker-compose.observability.yml config
    
  docker-build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker images
      run: |
        docker build -t dashbuilder:test .
        docker build -f Dockerfile.best-practices -t dashbuilder:best-practices .
    
  integration-test:
    runs-on: ubuntu-latest
    needs: docker-build
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Start services
      run: |
        docker-compose up -d
        sleep 30
    
    - name: Run integration tests
      run: |
        chmod +x tests/integration/nrdot-integration-test.sh
        ./tests/integration/nrdot-integration-test.sh
    
    - name: Stop services
      if: always()
      run: docker-compose down